-- grab fields from repos_with_full_meta_raw most likely to be relevant
SELECT
  owner_name,
  repo_name AS matched_name,
  full_metadata.name AS current_name,
  used_by,
  num_commits,
  readme_text,
  full_metadata.network_count AS network_count,
  full_metadata.forks_count AS forks_count,
  full_metadata.allow_forking AS allow_forking,
  full_metadata.open_issues_count AS open_issues_count,
  full_metadata.disabled AS disabled,
  full_metadata.has_wiki AS has_wiki,
  full_metadata.has_projects AS has_projects,
  full_metadata.language AS primary_programming_language,
  full_metadata.topics AS topics,
  full_metadata.stargazers_count AS stargazers_count,
  full_metadata.subscribers_count AS subscribers_count,
  full_metadata.updated_at AS updated_at,
  full_metadata.id AS id,
  full_metadata.has_pages AS has_pages,
  full_metadata.license AS license,
  full_metadata.size AS size,
  full_metadata.created_at AS created_at,
  full_metadata.archived AS archived,
  full_metadata.open_issues AS open_issues,
  full_metadata.default_branch AS default_branch,
  full_metadata.fork AS fork,
  full_metadata.is_template AS is_template,
  full_metadata.description AS description,
  full_metadata.pushed_at AS pushed_at,
  full_metadata.node_id AS node_id,
  full_metadata.has_issues AS has_issues,
  sources,
  num_releases,
  num_contributors,
  IF(full_metadata.homepage = "", NULL, full_metadata.homepage) AS homepage,
  STRUCT(full_metadata.parent.owner.login AS owner_name,
    full_metadata.parent.name AS repo_name) AS fork_of,
  STRUCT(full_metadata.source.owner.login AS owner_name,
    full_metadata.source.name AS repo_name) AS ultimate_fork_of
FROM
  staging_github_metrics.repos_with_full_meta_raw
